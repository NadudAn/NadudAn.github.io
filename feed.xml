<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://nadudan.github.io/</id><title>Devbug</title><subtitle>NadudAn's Dev Blog</subtitle> <updated>2022-07-31T14:15:29+09:00</updated> <author> <name>NadudAn</name> <uri>https://nadudan.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://nadudan.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://nadudan.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 NadudAn </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Spring 입문 5 - 회원 관리 예제(웹 MVC 개발)</title><link href="https://nadudan.github.io/posts/Spring-Study-Basic-5/" rel="alternate" type="text/html" title="Spring 입문 5 - 회원 관리 예제(웹 MVC 개발)" /><published>2022-07-31T14:13:00+09:00</published> <updated>2022-07-31T14:15:01+09:00</updated> <id>https://nadudan.github.io/posts/Spring-Study-Basic-5/</id> <content src="https://nadudan.github.io/posts/Spring-Study-Basic-5/" /> <author> <name>NadudAn</name> </author> <category term="Study" /> <category term="Spring" /> <summary> 인프런 김영한 님 스프링 입문 강의를 들은 후 공부한 내용입니다. 홈 화면 추가 홈 컨트롤러 추가 package hello.hellospring.controller; import org.springframework.stereotype.Controller; import org.springframework.web.bind.annotation.GetMapping; @Controller public class HomeController { @GetMapping("/") public String home() { return "home"; } } 회원 관리용 홈 resources/templates/home.html &amp;lt;!DOCTYPE html&amp;gt;... </summary> </entry> <entry><title>Spring 입문 4 - 컴포넌트 스캔과 자동 의존관계 설정</title><link href="https://nadudan.github.io/posts/Spring-Study-Basic-4/" rel="alternate" type="text/html" title="Spring 입문 4 - 컴포넌트 스캔과 자동 의존관계 설정" /><published>2022-07-30T12:52:00+09:00</published> <updated>2022-07-30T12:52:00+09:00</updated> <id>https://nadudan.github.io/posts/Spring-Study-Basic-4/</id> <content src="https://nadudan.github.io/posts/Spring-Study-Basic-4/" /> <author> <name>NadudAn</name> </author> <category term="Study" /> <category term="Spring" /> <summary> 인프런 김영한 님 스프링 입문 강의를 들은 후 공부한 내용입니다. 스프링 빈을 등록하고, 의존관계 설정하기 회원 컨트롤러에 의존관계 추가 package hello.hellospring.controller; import hello.hellospring.service.MemberService; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.stereotype.Controller; @Controller public class MemberController { private final MemberService memberService; @Autowired ... </summary> </entry> <entry><title>IntelliJ 단축키 (Windows / Linux)</title><link href="https://nadudan.github.io/posts/IntelliJ-Keys-For-Window-Linux/" rel="alternate" type="text/html" title="IntelliJ 단축키 (Windows / Linux)" /><published>2022-07-27T15:39:00+09:00</published> <updated>2022-07-27T15:39:00+09:00</updated> <id>https://nadudan.github.io/posts/IntelliJ-Keys-For-Window-Linux/</id> <content src="https://nadudan.github.io/posts/IntelliJ-Keys-For-Window-Linux/" /> <author> <name>NadudAn</name> </author> <category term="Post" /> <category term="IntelliJ" /> <summary> General : 일반적인 단축키     Alt + #[0-9] 각 단축키에 해당하는 도구창 열기 Ctrl + S 모두 저장 Ctrl + Shift + F12 편집기(Editor) 영역을 최대로 크기로 토글 Ctrl + Shift + I 현재 프로필 기준으로 현재 파일 검사 Ctrl + Alt + S 설정창(Settings) 열기 Ctrl + Alt + Shift + S 프로젝트 구조창(Project Structure) ... </summary> </entry> <entry><title>Spring 입문 3 - 회원 관리 예제(백엔드 개발)</title><link href="https://nadudan.github.io/posts/Spring-Study-Basic-3/" rel="alternate" type="text/html" title="Spring 입문 3 - 회원 관리 예제(백엔드 개발)" /><published>2022-07-27T15:13:00+09:00</published> <updated>2022-07-31T14:08:59+09:00</updated> <id>https://nadudan.github.io/posts/Spring-Study-Basic-3/</id> <content src="https://nadudan.github.io/posts/Spring-Study-Basic-3/" /> <author> <name>NadudAn</name> </author> <category term="Study" /> <category term="Spring" /> <summary> 인프런 김영한 님 스프링 입문 강의를 들은 후 공부한 내용입니다. 비즈니스 요구사항 정리 데이터: 회원 ID, 이름 기능: 회원 등록, 조회 아직 데이터 저장소가 선정되지 않음(가상의 시나리오) 일반적인 웹 어플리케이션 계층 구조 컨트롤러: 웹 MVC의 컨트롤러 역할 서비스: 핵심 비즈니스 로직 구현 리포지토리: 데이터베이스에 접근, 도메인 객체를 DB에 저장하고 관리 도메인: 비즈니스 도메인 객체, 예) 회원, 주문, 쿠폰 등등 데이터베이스에 저장하고 관리됨 클래스 의존관계 아직 DB 저장소가 선정되지 않았다는 가정이기에, interface로 구현 클래스를 변경할 수 있도록 설계 DB 저장소는 RDB, NoSQL 등등 다양한 저장소를 ... </summary> </entry> <entry><title>Spring 입문 2 - 정적 컨텐츠, MVC, API</title><link href="https://nadudan.github.io/posts/Spring-Study-Basic-2/" rel="alternate" type="text/html" title="Spring 입문 2 - 정적 컨텐츠, MVC, API" /><published>2022-07-24T21:53:00+09:00</published> <updated>2022-07-27T15:40:50+09:00</updated> <id>https://nadudan.github.io/posts/Spring-Study-Basic-2/</id> <content src="https://nadudan.github.io/posts/Spring-Study-Basic-2/" /> <author> <name>NadudAn</name> </author> <category term="Study" /> <category term="Spring" /> <summary> 인프런 김영한 님 스프링 입문 강의를 들은 후 공부한 내용입니다. 정적 컨텐츠 서버에서 뭐 하는거 없이 파일을 웹 브라우저에 넘겨줌 MVC와 템플릿 엔진 가장 많이 하는 방식 jsp, php가 템플릿 엔진 html을 그냥 넘겨주는 것이 아닌 서버에서 프로그래밍하여 html을 동적으로 바꾸어 보냄. 그것을 하기 위해 컨트롤러, 모델, 화면 이 세 가지를 모델 뷰 컨트롤러라 해서 MVC라 함. 둘의 차이 정적 컨텐츠는 파일을 그대로 전달. mvc와 템플릿 엔진은 서버에서 변형하여 html을 좀 바꿔서 내려주는 방식 ... </summary> </entry> </feed>
